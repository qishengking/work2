一.饿汉式单例模式
   1.优点：没有加载任何锁，执行效率高，因为在类加载的时候就已经初始化，并且创建好了单例
          所以不存在线程安全的问题，保证了线程安全
   2.缺点：不管用与不用都实例化，这就存在浪费内存空间的问题

二.懒汉式单例模式
   1.优点：当用户调用实例化方法的时候才会被实例化，这样就节省了内存空间
   2.缺点：必须要采取同步措施，如果不采取同步措施就会存在线程安全问题

   3.线程安全处理方法
     1).在实例化方法直接加上synchronized的关键字，这样保证了线程安全
        但是在线程数量比较多的时候，就会大幅度的使性能下降，增加了cpu的压力
     2).采取双重锁检查，这样有类锁变成了方法锁，相比之下提高了性能，但是同样
        还是用到了synchronized的关键字，还是会影响性能
     3).静态内部类的方法，这种如果不使用的时候是不会加载静态内部类，这样节省了内存
        在调用的时候，首先要加载静态内部类，这个时候就会将初始化一个新的类对象，
        然后在返回结果之前，内部类一定是被初始化完成的，而且这种机制是在jvm虚拟机中
        进行，也就保证了线程安全，所以返回的必然是一个单例

三.注册式单例模式
    1.枚举型：
        1).优点：它采取的是饿汉式的实现，也就保证了线程安全，继而保证了单例
        2).缺点：饿汉式的缺点，占内存，同时也对暴力反射访问和序列化采取了防护措施
    2.容器花村：
        1).优点：方便管理
        2).缺点：线程不安全
一：反射破坏单例
    1.描述：这种方式是用类的反射，直接访问类的初始化方法来构造对象，这样就会生成两个不同的对象
    2.解决办法：在私有构造方法中加入一个实例判断，如果有实例，就直接抛出一场

二：序列化破坏单例
    1.描述：这种方式是对类进行序列化，写入到磁盘中，然后再对这个存入到磁盘中干的文件进行反序列化，重新生成一个对象
           这样就会生成两个完全不同对对象
    2.解决办法：重写readResolve()方法，返回内部实例变量。原因是因为再反序列化生成对象的时候，它会判断是否重写了readResolve();
           方法，如果重写了就会执行里边的逻辑，就会使用readResolve()方法中返回的对象，进而覆盖掉之前生成的新的对象。